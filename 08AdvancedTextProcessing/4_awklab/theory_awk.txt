
NEED WORK

AWK - A Brief Introduction

AWK is a powerful text-processing language named after its creators: 
Aho, Weinberger, and Kernighan. Used predominantly for pattern scanning and processing, 
AWK is particularly efficient when working with structured data, 
such as columnar or delimited data in files.


Key Concepts:
1. Records and Fields:
   - By default, AWK reads a file line by line, treating each line as a record.
   - Within a record, AWK further divides the data into fields based on a field separator,
    which is a space by default.
   
2. Built-in Variables:
   - FS: Field Separator
   - OFS: Output Field Separator
   - NF: Number of Fields in a record
   - NR: Current Record Number

3. Patterns and Actions:
   - AWK operates on the principle of patterns and actions. 
   For every input line that matches a pattern, AWK performs the associated action.

Example:

$ echo "apple orange" | awk '{print $2, $1}'

Output: orange apple

This example swaps the two words, showcasing how AWK uses spaces as 
the default field separator and operates on fields.
