Grep Lab Exercise Solutions and Explanations for Software Developers

1. Find all Python functions printing to the console:
Command:
$ grep -r "def.*print" *.py

Explanation:
- The `-r` flag enables recursive search.
- The pattern "def.*print" searches for function definitions (`def`) that have a `print` statement within them.

2. Identify all error logs in `app.log`:
Command:
$ grep "ERROR" app.log

Explanation:
- This command searches for all lines containing the string "ERROR" in the `app.log` file, commonly used to indicate error logs.

3. Search for all TODO comments in the codebase:
Command:
$ grep -r "TODO" *.py

Explanation:
- Developers often use "TODO" comments to mark portions of the code that need future attention.

4. List `dbConnection` instances with line numbers:
Command:
$ grep -rn "dbConnection" *.py

Explanation:
- The `-n` flag prefixes each line of output with its line number.
- This command searches for the variable `dbConnection` across Python files.

5. Extract URLs from `app.log`:
Command:
$ grep -o 'http\://[^ ]*' app.log; grep -o 'https\://[^ ]*' app.log

Explanation:
- The `-o` flag extracts only the matching part of the input.
- These commands search for substrings starting with "http://" or "https://", respectively, and ending when a space character is encountered.
